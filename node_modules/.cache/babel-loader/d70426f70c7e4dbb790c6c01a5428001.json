{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/context-example/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { UserContextConsumer } from \"./userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      user: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(UserContextConsumer, {\n          children: username => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"main\",\n            children: [\"No new notifications, \", username, \"! \\uD83C\\uDF89\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"New username\",\n        value: this.state.user,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/**\n *  <button onClick={}>Change Username</button>\n * Challenge: Add the ability for the user to choose a new username\n * \n * 1. Add state to this component to hold the new username in a controlled form\n * (https://reactjs.org/docs/forms.html#controlled-components)\n * (https://scrimba.com/p/p7P5Hd/cW8Jdfy)\n * \n * 2. Change userContext into a component that has state and provides the ability\n * to change the user's username. Make sure to export the provider and consumer\n * as named exports and update their uses anywhere else in the app\n * \n * 3. Give this App component the ability to update the username in context when the\n * button is clicked\n */","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/context-example/src/App.js"],"names":["React","Header","UserContextConsumer","App","Component","constructor","state","user","handleChange","bind","handleClick","e","preventDefault","setState","target","value","render","username"],"mappings":";AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,mBAAR,QAAkC,eAAlC;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG;AADI,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAkB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAlB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAGI,CAAC,CAACG,MAAF,CAASC;AADJ,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,mBAAD;AAAA,oBACKC,QAAQ,iBACL;AAAG,YAAA,SAAS,EAAC,MAAb;AAAA,iDAA2CA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,IAJtB;AAKI,QAAA,QAAQ,EAAE,KAAKC;AALnB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAvC+B;;AA0ClC,eAAeL,GAAf;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport './App.css';\nimport React from \"react\"\n\nimport Header from \"./Header\"\nimport {UserContextConsumer} from \"./userContext\"\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user : \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick =this.handleClick.bind(this)\n  }\n  \n  handleChange(e){\n    e.preventDefault()\n    this.setState({\n      user : e.target.value\n    })\n\n  }\n\n  render(){\n    return (\n      <div>\n          <Header />\n          <main>\n              <UserContextConsumer>\n                  {username => (\n                      <p className=\"main\">No new notifications, {username}! ðŸŽ‰</p>\n                  )}\n              </UserContextConsumer>\n          </main>\n          <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"New username\"\n              value={this.state.user}\n              onChange={this.handleChange}\n          />\n          \n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n  /**\n   *  <button onClick={}>Change Username</button>\n   * Challenge: Add the ability for the user to choose a new username\n   * \n   * 1. Add state to this component to hold the new username in a controlled form\n   * (https://reactjs.org/docs/forms.html#controlled-components)\n   * (https://scrimba.com/p/p7P5Hd/cW8Jdfy)\n   * \n   * 2. Change userContext into a component that has state and provides the ability\n   * to change the user's username. Make sure to export the provider and consumer\n   * as named exports and update their uses anywhere else in the app\n   * \n   * 3. Give this App component the ability to update the username in context when the\n   * button is clicked\n   */\n"]},"metadata":{},"sourceType":"module"}